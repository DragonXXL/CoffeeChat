// Code generated by protoc-gen-go. DO NOT EDIT.
// source: CIM.Def.proto

package cim

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 外部消息：客户端 <-> 服务器消息定义
type CIMCmdID int32

const (
	CIMCmdID_kCIM_CID_UNKNOWN                         CIMCmdID = 0
	CIMCmdID_kCIM_CID_LOGIN_AUTH_TOKEN_REQ            CIMCmdID = 257
	CIMCmdID_kCIM_CID_LOGIN_AUTH_TOKEN_RSP            CIMCmdID = 258
	CIMCmdID_kCIM_CID_LOGIN_AUTH_LOGOUT_REQ           CIMCmdID = 259
	CIMCmdID_kCIM_CID_LOGIN_AUTH_LOGOUT_RSP           CIMCmdID = 260
	CIMCmdID_kCIM_CID_LOGIN_HEARTBEAT                 CIMCmdID = 261
	CIMCmdID_kCIM_CID_LIST_RECENT_CONTACT_SESSION_REQ CIMCmdID = 513
	CIMCmdID_kCIM_CID_LIST_RECENT_CONTACT_SESSION_RSP CIMCmdID = 514
	// kCIM_CID_LIST_UNREAD_CNT_REQ = 0x0203; // 未读消息计数列表请求
	// kCIM_CID_LIST_UNREAD_CNT_RSP = 0x0204;
	CIMCmdID_kCIM_CID_LIST_MSG_REQ              CIMCmdID = 517
	CIMCmdID_kCIM_CID_LIST_MSG_RSP              CIMCmdID = 518
	CIMCmdID_kCIM_CID_MSG_DATA                  CIMCmdID = 769
	CIMCmdID_kCIM_CID_MSG_DATA_ACK              CIMCmdID = 770
	CIMCmdID_kCIM_CID_MSG_READ_ACK              CIMCmdID = 771
	CIMCmdID_kCIM_CID_MSG_READ_NOTIFY           CIMCmdID = 772
	CIMCmdID_kCIM_CID_MSG_GET_LATEST_MSG_ID_REQ CIMCmdID = 773
	CIMCmdID_kCIM_CID_MSG_GET_LATEST_MSG_ID_RSP CIMCmdID = 774
	CIMCmdID_kCIM_CID_MSG_GET_BY_MSG_ID_REQ     CIMCmdID = 775
	CIMCmdID_kCIM_CID_MSG_GET_BY_MSG_ID_RSP     CIMCmdID = 776
)

var CIMCmdID_name = map[int32]string{
	0:   "kCIM_CID_UNKNOWN",
	257: "kCIM_CID_LOGIN_AUTH_TOKEN_REQ",
	258: "kCIM_CID_LOGIN_AUTH_TOKEN_RSP",
	259: "kCIM_CID_LOGIN_AUTH_LOGOUT_REQ",
	260: "kCIM_CID_LOGIN_AUTH_LOGOUT_RSP",
	261: "kCIM_CID_LOGIN_HEARTBEAT",
	513: "kCIM_CID_LIST_RECENT_CONTACT_SESSION_REQ",
	514: "kCIM_CID_LIST_RECENT_CONTACT_SESSION_RSP",
	517: "kCIM_CID_LIST_MSG_REQ",
	518: "kCIM_CID_LIST_MSG_RSP",
	769: "kCIM_CID_MSG_DATA",
	770: "kCIM_CID_MSG_DATA_ACK",
	771: "kCIM_CID_MSG_READ_ACK",
	772: "kCIM_CID_MSG_READ_NOTIFY",
	773: "kCIM_CID_MSG_GET_LATEST_MSG_ID_REQ",
	774: "kCIM_CID_MSG_GET_LATEST_MSG_ID_RSP",
	775: "kCIM_CID_MSG_GET_BY_MSG_ID_REQ",
	776: "kCIM_CID_MSG_GET_BY_MSG_ID_RSP",
}

var CIMCmdID_value = map[string]int32{
	"kCIM_CID_UNKNOWN":                         0,
	"kCIM_CID_LOGIN_AUTH_TOKEN_REQ":            257,
	"kCIM_CID_LOGIN_AUTH_TOKEN_RSP":            258,
	"kCIM_CID_LOGIN_AUTH_LOGOUT_REQ":           259,
	"kCIM_CID_LOGIN_AUTH_LOGOUT_RSP":           260,
	"kCIM_CID_LOGIN_HEARTBEAT":                 261,
	"kCIM_CID_LIST_RECENT_CONTACT_SESSION_REQ": 513,
	"kCIM_CID_LIST_RECENT_CONTACT_SESSION_RSP": 514,
	"kCIM_CID_LIST_MSG_REQ":                    517,
	"kCIM_CID_LIST_MSG_RSP":                    518,
	"kCIM_CID_MSG_DATA":                        769,
	"kCIM_CID_MSG_DATA_ACK":                    770,
	"kCIM_CID_MSG_READ_ACK":                    771,
	"kCIM_CID_MSG_READ_NOTIFY":                 772,
	"kCIM_CID_MSG_GET_LATEST_MSG_ID_REQ":       773,
	"kCIM_CID_MSG_GET_LATEST_MSG_ID_RSP":       774,
	"kCIM_CID_MSG_GET_BY_MSG_ID_REQ":           775,
	"kCIM_CID_MSG_GET_BY_MSG_ID_RSP":           776,
}

func (x CIMCmdID) String() string {
	return proto.EnumName(CIMCmdID_name, int32(x))
}

func (CIMCmdID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_59f2b4dd9a8c1a4e, []int{0}
}

// 内部消息：服务器 <-> 服务器消息定义
type CIMIntenralCmdID int32

const (
	CIMIntenralCmdID_kCIM_SID_UNKNOWN         CIMIntenralCmdID = 0
	CIMIntenralCmdID_kCIM_SID_DB_VALIDATE_REQ CIMIntenralCmdID = 1793
	CIMIntenralCmdID_kCIM_SID_DB_VALIDATE_RSP CIMIntenralCmdID = 1794
)

var CIMIntenralCmdID_name = map[int32]string{
	0:    "kCIM_SID_UNKNOWN",
	1793: "kCIM_SID_DB_VALIDATE_REQ",
	1794: "kCIM_SID_DB_VALIDATE_RSP",
}

var CIMIntenralCmdID_value = map[string]int32{
	"kCIM_SID_UNKNOWN":         0,
	"kCIM_SID_DB_VALIDATE_REQ": 1793,
	"kCIM_SID_DB_VALIDATE_RSP": 1794,
}

func (x CIMIntenralCmdID) String() string {
	return proto.EnumName(CIMIntenralCmdID_name, int32(x))
}

func (CIMIntenralCmdID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_59f2b4dd9a8c1a4e, []int{1}
}

type CIMErrorCode int32

const (
	// 通用错误码
	CIMErrorCode_kCIM_ERR_SUCCSSE        CIMErrorCode = 0
	CIMErrorCode_kCIM_ERR_INTERNAL_ERROR CIMErrorCode = 1
	// 账号错误码
	CIMErrorCode_kCIM_ERR_LOGIN_DB_VALIDATE_FAILED CIMErrorCode = 200
	CIMErrorCode_kCIM_ERR_LOGIN_VERSION_TOO_OLD    CIMErrorCode = 201
	CIMErrorCode_kCIM_ERR_LOGIN_INVALID_USER_TOKEN CIMErrorCode = 202
	// HTTP API 错码
	CIMErrorCode_kCIM_ERROR_USER_ALREADY_EXIST     CIMErrorCode = 900
	CIMErrorCode_kCIM_ERROR_USER_INVALID_PARAMETER CIMErrorCode = 901
)

var CIMErrorCode_name = map[int32]string{
	0:   "kCIM_ERR_SUCCSSE",
	1:   "kCIM_ERR_INTERNAL_ERROR",
	200: "kCIM_ERR_LOGIN_DB_VALIDATE_FAILED",
	201: "kCIM_ERR_LOGIN_VERSION_TOO_OLD",
	202: "kCIM_ERR_LOGIN_INVALID_USER_TOKEN",
	900: "kCIM_ERROR_USER_ALREADY_EXIST",
	901: "kCIM_ERROR_USER_INVALID_PARAMETER",
}

var CIMErrorCode_value = map[string]int32{
	"kCIM_ERR_SUCCSSE":                  0,
	"kCIM_ERR_INTERNAL_ERROR":           1,
	"kCIM_ERR_LOGIN_DB_VALIDATE_FAILED": 200,
	"kCIM_ERR_LOGIN_VERSION_TOO_OLD":    201,
	"kCIM_ERR_LOGIN_INVALID_USER_TOKEN": 202,
	"kCIM_ERROR_USER_ALREADY_EXIST":     900,
	"kCIM_ERROR_USER_INVALID_PARAMETER": 901,
}

func (x CIMErrorCode) String() string {
	return proto.EnumName(CIMErrorCode_name, int32(x))
}

func (CIMErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_59f2b4dd9a8c1a4e, []int{2}
}

// 客户端类型
type CIMClientType int32

const (
	CIMClientType_kCIM_CLIENT_TYPE_DEFAULT CIMClientType = 0
	CIMClientType_kCIM_CLIENT_TYPE_ANDROID CIMClientType = 1
	CIMClientType_kCIM_CLIENT_TYPE_IOS     CIMClientType = 2
	CIMClientType_kCIM_CLIENT_TYPE_WEB     CIMClientType = 3
)

var CIMClientType_name = map[int32]string{
	0: "kCIM_CLIENT_TYPE_DEFAULT",
	1: "kCIM_CLIENT_TYPE_ANDROID",
	2: "kCIM_CLIENT_TYPE_IOS",
	3: "kCIM_CLIENT_TYPE_WEB",
}

var CIMClientType_value = map[string]int32{
	"kCIM_CLIENT_TYPE_DEFAULT": 0,
	"kCIM_CLIENT_TYPE_ANDROID": 1,
	"kCIM_CLIENT_TYPE_IOS":     2,
	"kCIM_CLIENT_TYPE_WEB":     3,
}

func (x CIMClientType) String() string {
	return proto.EnumName(CIMClientType_name, int32(x))
}

func (CIMClientType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_59f2b4dd9a8c1a4e, []int{3}
}

// 会话类型
type CIMSessionType int32

const (
	CIMSessionType_kCIM_SESSION_TYPE_Invalid CIMSessionType = 0
	CIMSessionType_kCIM_SESSION_TYPE_SINGLE  CIMSessionType = 1
	CIMSessionType_kCIM_SESSION_TYPE_GROUP   CIMSessionType = 2
)

var CIMSessionType_name = map[int32]string{
	0: "kCIM_SESSION_TYPE_Invalid",
	1: "kCIM_SESSION_TYPE_SINGLE",
	2: "kCIM_SESSION_TYPE_GROUP",
}

var CIMSessionType_value = map[string]int32{
	"kCIM_SESSION_TYPE_Invalid": 0,
	"kCIM_SESSION_TYPE_SINGLE":  1,
	"kCIM_SESSION_TYPE_GROUP":   2,
}

func (x CIMSessionType) String() string {
	return proto.EnumName(CIMSessionType_name, int32(x))
}

func (CIMSessionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_59f2b4dd9a8c1a4e, []int{4}
}

// 消息类型
type CIMMsgType int32

const (
	CIMMsgType_kCIM_MSG_TYPE_UNKNOWN CIMMsgType = 0
	CIMMsgType_kCIM_MSG_TYPE_TEXT    CIMMsgType = 1
	CIMMsgType_kCIM_MSG_TYPE_IMAGE   CIMMsgType = 2
	CIMMsgType_kCIM_MSG_TYPE_AUDIO   CIMMsgType = 3
	// kCIM_MSG_TYPE_VIDEO = 4;        // 视频
	// kCIM_MSG_TYPE_LOCATION = 5;     // 位置
	// kCIM_MSG_TYPE_NOTIFACATION = 6; // 系统通知（包括入群出群通知等）
	// kCIM_MSG_TYPE_FILE = 7;         // 文件
	CIMMsgType_kCIM_MSG_TYPE_TIPS  CIMMsgType = 8
	CIMMsgType_kCIM_MSG_TYPE_ROBOT CIMMsgType = 9
)

var CIMMsgType_name = map[int32]string{
	0: "kCIM_MSG_TYPE_UNKNOWN",
	1: "kCIM_MSG_TYPE_TEXT",
	2: "kCIM_MSG_TYPE_IMAGE",
	3: "kCIM_MSG_TYPE_AUDIO",
	8: "kCIM_MSG_TYPE_TIPS",
	9: "kCIM_MSG_TYPE_ROBOT",
}

var CIMMsgType_value = map[string]int32{
	"kCIM_MSG_TYPE_UNKNOWN": 0,
	"kCIM_MSG_TYPE_TEXT":    1,
	"kCIM_MSG_TYPE_IMAGE":   2,
	"kCIM_MSG_TYPE_AUDIO":   3,
	"kCIM_MSG_TYPE_TIPS":    8,
	"kCIM_MSG_TYPE_ROBOT":   9,
}

func (x CIMMsgType) String() string {
	return proto.EnumName(CIMMsgType_name, int32(x))
}

func (CIMMsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_59f2b4dd9a8c1a4e, []int{5}
}

// 消息状态
type CIMMsgStatus int32

const (
	CIMMsgStatus_kCIM_MSG_STATUS_NONE      CIMMsgStatus = 0
	CIMMsgStatus_kCIM_MSG_STATUS_UNREAD    CIMMsgStatus = 1
	CIMMsgStatus_kCIM_MSG_STATUS_READ      CIMMsgStatus = 2
	CIMMsgStatus_kCIM_MSG_STATUS_DELETED   CIMMsgStatus = 3
	CIMMsgStatus_kCIM_MSG_STATUS_SENDING   CIMMsgStatus = 4
	CIMMsgStatus_kCIM_MSG_STATUS_SENT      CIMMsgStatus = 5
	CIMMsgStatus_kCIM_MSG_STATUS_RECEIPT   CIMMsgStatus = 6
	CIMMsgStatus_kCIM_MSG_STATUS_DRAFT     CIMMsgStatus = 7
	CIMMsgStatus_kCIM_MSG_STATUS_SendCacel CIMMsgStatus = 8
	CIMMsgStatus_kCIM_MSG_STATUS_REFUSED   CIMMsgStatus = 9
	CIMMsgStatus_kCIM_MSG_STATUS_FAILED    CIMMsgStatus = 10
)

var CIMMsgStatus_name = map[int32]string{
	0:  "kCIM_MSG_STATUS_NONE",
	1:  "kCIM_MSG_STATUS_UNREAD",
	2:  "kCIM_MSG_STATUS_READ",
	3:  "kCIM_MSG_STATUS_DELETED",
	4:  "kCIM_MSG_STATUS_SENDING",
	5:  "kCIM_MSG_STATUS_SENT",
	6:  "kCIM_MSG_STATUS_RECEIPT",
	7:  "kCIM_MSG_STATUS_DRAFT",
	8:  "kCIM_MSG_STATUS_SendCacel",
	9:  "kCIM_MSG_STATUS_REFUSED",
	10: "kCIM_MSG_STATUS_FAILED",
}

var CIMMsgStatus_value = map[string]int32{
	"kCIM_MSG_STATUS_NONE":      0,
	"kCIM_MSG_STATUS_UNREAD":    1,
	"kCIM_MSG_STATUS_READ":      2,
	"kCIM_MSG_STATUS_DELETED":   3,
	"kCIM_MSG_STATUS_SENDING":   4,
	"kCIM_MSG_STATUS_SENT":      5,
	"kCIM_MSG_STATUS_RECEIPT":   6,
	"kCIM_MSG_STATUS_DRAFT":     7,
	"kCIM_MSG_STATUS_SendCacel": 8,
	"kCIM_MSG_STATUS_REFUSED":   9,
	"kCIM_MSG_STATUS_FAILED":    10,
}

func (x CIMMsgStatus) String() string {
	return proto.EnumName(CIMMsgStatus_name, int32(x))
}

func (CIMMsgStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_59f2b4dd9a8c1a4e, []int{6}
}

// 会话状态
type CIMSessionStatusType int32

const (
	CIMSessionStatusType_kCIM_SESSION_STATUS_OK     CIMSessionStatusType = 0
	CIMSessionStatusType_kCIM_SESSION_STATUS_DELETE CIMSessionStatusType = 1
)

var CIMSessionStatusType_name = map[int32]string{
	0: "kCIM_SESSION_STATUS_OK",
	1: "kCIM_SESSION_STATUS_DELETE",
}

var CIMSessionStatusType_value = map[string]int32{
	"kCIM_SESSION_STATUS_OK":     0,
	"kCIM_SESSION_STATUS_DELETE": 1,
}

func (x CIMSessionStatusType) String() string {
	return proto.EnumName(CIMSessionStatusType_name, int32(x))
}

func (CIMSessionStatusType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_59f2b4dd9a8c1a4e, []int{7}
}

// 消息属性
type CIMMsgFeature int32

const (
	CIMMsgFeature_kCIM_MSG_FEATURE_DEFAULT CIMMsgFeature = 0
	// kCIM_MSG_FEATURE_LEAVE_MSG = 1;      // 离线消息(和漫游消息有何区别)
	CIMMsgFeature_kCIM_MSG_FEATURE_ROAM_MSG CIMMsgFeature = 2
)

var CIMMsgFeature_name = map[int32]string{
	0: "kCIM_MSG_FEATURE_DEFAULT",
	2: "kCIM_MSG_FEATURE_ROAM_MSG",
}

var CIMMsgFeature_value = map[string]int32{
	"kCIM_MSG_FEATURE_DEFAULT":  0,
	"kCIM_MSG_FEATURE_ROAM_MSG": 2,
}

func (x CIMMsgFeature) String() string {
	return proto.EnumName(CIMMsgFeature_name, int32(x))
}

func (CIMMsgFeature) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_59f2b4dd9a8c1a4e, []int{8}
}

// 消息错误码
type CIMResCode int32

const (
	CIMResCode_kCIM_RES_CODE_OK CIMResCode = 0
)

var CIMResCode_name = map[int32]string{
	0: "kCIM_RES_CODE_OK",
}

var CIMResCode_value = map[string]int32{
	"kCIM_RES_CODE_OK": 0,
}

func (x CIMResCode) String() string {
	return proto.EnumName(CIMResCode_name, int32(x))
}

func (CIMResCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_59f2b4dd9a8c1a4e, []int{9}
}

// 用户信息
type CIMUserInfo struct {
	UserId   uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NickName string `protobuf:"bytes,2,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	//optional
	AttachInfo           string   `protobuf:"bytes,11,opt,name=attach_info,json=attachInfo,proto3" json:"attach_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CIMUserInfo) Reset()         { *m = CIMUserInfo{} }
func (m *CIMUserInfo) String() string { return proto.CompactTextString(m) }
func (*CIMUserInfo) ProtoMessage()    {}
func (*CIMUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_59f2b4dd9a8c1a4e, []int{0}
}

func (m *CIMUserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CIMUserInfo.Unmarshal(m, b)
}
func (m *CIMUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CIMUserInfo.Marshal(b, m, deterministic)
}
func (m *CIMUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CIMUserInfo.Merge(m, src)
}
func (m *CIMUserInfo) XXX_Size() int {
	return xxx_messageInfo_CIMUserInfo.Size(m)
}
func (m *CIMUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CIMUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CIMUserInfo proto.InternalMessageInfo

func (m *CIMUserInfo) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CIMUserInfo) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *CIMUserInfo) GetAttachInfo() string {
	if m != nil {
		return m.AttachInfo
	}
	return ""
}

// 会话信息
type CIMContactSessionInfo struct {
	SessionId     uint64               `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	SessionType   CIMSessionType       `protobuf:"varint,2,opt,name=session_type,json=sessionType,proto3,enum=CIM.Def.CIMSessionType" json:"session_type,omitempty"`
	SessionStatus CIMSessionStatusType `protobuf:"varint,3,opt,name=session_status,json=sessionStatus,proto3,enum=CIM.Def.CIMSessionStatusType" json:"session_status,omitempty"`
	UnreadCnt     uint32               `protobuf:"varint,4,opt,name=unread_cnt,json=unreadCnt,proto3" json:"unread_cnt,omitempty"`
	UpdatedTime   uint32               `protobuf:"varint,5,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
	MsgId         string               `protobuf:"bytes,6,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	ServerMsgId   uint64               `protobuf:"varint,7,opt,name=server_msg_id,json=serverMsgId,proto3" json:"server_msg_id,omitempty"`
	MsgTimeStamp  uint32               `protobuf:"varint,8,opt,name=msg_time_stamp,json=msgTimeStamp,proto3" json:"msg_time_stamp,omitempty"`
	MsgData       []byte               `protobuf:"bytes,9,opt,name=msg_data,json=msgData,proto3" json:"msg_data,omitempty"`
	MsgType       CIMMsgType           `protobuf:"varint,10,opt,name=msg_type,json=msgType,proto3,enum=CIM.Def.CIMMsgType" json:"msg_type,omitempty"`
	MsgFromUserId uint64               `protobuf:"varint,11,opt,name=msg_from_user_id,json=msgFromUserId,proto3" json:"msg_from_user_id,omitempty"`
	MsgStatus     CIMMsgStatus         `protobuf:"varint,12,opt,name=msg_status,json=msgStatus,proto3,enum=CIM.Def.CIMMsgStatus" json:"msg_status,omitempty"`
	//optional
	MsgAttach string `protobuf:"bytes,13,opt,name=msg_attach,json=msgAttach,proto3" json:"msg_attach,omitempty"`
	//optional
	ExtendData string `protobuf:"bytes,14,opt,name=extend_data,json=extendData,proto3" json:"extend_data,omitempty"`
	//optional
	IsRobotSession       bool     `protobuf:"varint,15,opt,name=is_robot_session,json=isRobotSession,proto3" json:"is_robot_session,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CIMContactSessionInfo) Reset()         { *m = CIMContactSessionInfo{} }
func (m *CIMContactSessionInfo) String() string { return proto.CompactTextString(m) }
func (*CIMContactSessionInfo) ProtoMessage()    {}
func (*CIMContactSessionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_59f2b4dd9a8c1a4e, []int{1}
}

func (m *CIMContactSessionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CIMContactSessionInfo.Unmarshal(m, b)
}
func (m *CIMContactSessionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CIMContactSessionInfo.Marshal(b, m, deterministic)
}
func (m *CIMContactSessionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CIMContactSessionInfo.Merge(m, src)
}
func (m *CIMContactSessionInfo) XXX_Size() int {
	return xxx_messageInfo_CIMContactSessionInfo.Size(m)
}
func (m *CIMContactSessionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CIMContactSessionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CIMContactSessionInfo proto.InternalMessageInfo

func (m *CIMContactSessionInfo) GetSessionId() uint64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *CIMContactSessionInfo) GetSessionType() CIMSessionType {
	if m != nil {
		return m.SessionType
	}
	return CIMSessionType_kCIM_SESSION_TYPE_Invalid
}

func (m *CIMContactSessionInfo) GetSessionStatus() CIMSessionStatusType {
	if m != nil {
		return m.SessionStatus
	}
	return CIMSessionStatusType_kCIM_SESSION_STATUS_OK
}

func (m *CIMContactSessionInfo) GetUnreadCnt() uint32 {
	if m != nil {
		return m.UnreadCnt
	}
	return 0
}

func (m *CIMContactSessionInfo) GetUpdatedTime() uint32 {
	if m != nil {
		return m.UpdatedTime
	}
	return 0
}

func (m *CIMContactSessionInfo) GetMsgId() string {
	if m != nil {
		return m.MsgId
	}
	return ""
}

func (m *CIMContactSessionInfo) GetServerMsgId() uint64 {
	if m != nil {
		return m.ServerMsgId
	}
	return 0
}

func (m *CIMContactSessionInfo) GetMsgTimeStamp() uint32 {
	if m != nil {
		return m.MsgTimeStamp
	}
	return 0
}

func (m *CIMContactSessionInfo) GetMsgData() []byte {
	if m != nil {
		return m.MsgData
	}
	return nil
}

func (m *CIMContactSessionInfo) GetMsgType() CIMMsgType {
	if m != nil {
		return m.MsgType
	}
	return CIMMsgType_kCIM_MSG_TYPE_UNKNOWN
}

func (m *CIMContactSessionInfo) GetMsgFromUserId() uint64 {
	if m != nil {
		return m.MsgFromUserId
	}
	return 0
}

func (m *CIMContactSessionInfo) GetMsgStatus() CIMMsgStatus {
	if m != nil {
		return m.MsgStatus
	}
	return CIMMsgStatus_kCIM_MSG_STATUS_NONE
}

func (m *CIMContactSessionInfo) GetMsgAttach() string {
	if m != nil {
		return m.MsgAttach
	}
	return ""
}

func (m *CIMContactSessionInfo) GetExtendData() string {
	if m != nil {
		return m.ExtendData
	}
	return ""
}

func (m *CIMContactSessionInfo) GetIsRobotSession() bool {
	if m != nil {
		return m.IsRobotSession
	}
	return false
}

// 消息信息
type CIMMsgInfo struct {
	ClientMsgId string         `protobuf:"bytes,1,opt,name=client_msg_id,json=clientMsgId,proto3" json:"client_msg_id,omitempty"`
	ServerMsgId uint64         `protobuf:"varint,2,opt,name=server_msg_id,json=serverMsgId,proto3" json:"server_msg_id,omitempty"`
	MsgResCode  CIMResCode     `protobuf:"varint,3,opt,name=msg_res_code,json=msgResCode,proto3,enum=CIM.Def.CIMResCode" json:"msg_res_code,omitempty"`
	MsgFeature  CIMMsgFeature  `protobuf:"varint,4,opt,name=msg_feature,json=msgFeature,proto3,enum=CIM.Def.CIMMsgFeature" json:"msg_feature,omitempty"`
	SessionType CIMSessionType `protobuf:"varint,5,opt,name=session_type,json=sessionType,proto3,enum=CIM.Def.CIMSessionType" json:"session_type,omitempty"`
	FromUserId  uint64         `protobuf:"varint,6,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	ToSessionId uint64         `protobuf:"varint,7,opt,name=to_session_id,json=toSessionId,proto3" json:"to_session_id,omitempty"`
	CreateTime  uint32         `protobuf:"varint,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	MsgType     CIMMsgType     `protobuf:"varint,9,opt,name=msg_type,json=msgType,proto3,enum=CIM.Def.CIMMsgType" json:"msg_type,omitempty"`
	MsgStatus   CIMMsgStatus   `protobuf:"varint,10,opt,name=msg_status,json=msgStatus,proto3,enum=CIM.Def.CIMMsgStatus" json:"msg_status,omitempty"`
	MsgData     []byte         `protobuf:"bytes,11,opt,name=msg_data,json=msgData,proto3" json:"msg_data,omitempty"`
	//optional
	Attach               string        `protobuf:"bytes,12,opt,name=attach,proto3" json:"attach,omitempty"`
	SenderClientType     CIMClientType `protobuf:"varint,13,opt,name=sender_client_type,json=senderClientType,proto3,enum=CIM.Def.CIMClientType" json:"sender_client_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CIMMsgInfo) Reset()         { *m = CIMMsgInfo{} }
func (m *CIMMsgInfo) String() string { return proto.CompactTextString(m) }
func (*CIMMsgInfo) ProtoMessage()    {}
func (*CIMMsgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_59f2b4dd9a8c1a4e, []int{2}
}

func (m *CIMMsgInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CIMMsgInfo.Unmarshal(m, b)
}
func (m *CIMMsgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CIMMsgInfo.Marshal(b, m, deterministic)
}
func (m *CIMMsgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CIMMsgInfo.Merge(m, src)
}
func (m *CIMMsgInfo) XXX_Size() int {
	return xxx_messageInfo_CIMMsgInfo.Size(m)
}
func (m *CIMMsgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CIMMsgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CIMMsgInfo proto.InternalMessageInfo

func (m *CIMMsgInfo) GetClientMsgId() string {
	if m != nil {
		return m.ClientMsgId
	}
	return ""
}

func (m *CIMMsgInfo) GetServerMsgId() uint64 {
	if m != nil {
		return m.ServerMsgId
	}
	return 0
}

func (m *CIMMsgInfo) GetMsgResCode() CIMResCode {
	if m != nil {
		return m.MsgResCode
	}
	return CIMResCode_kCIM_RES_CODE_OK
}

func (m *CIMMsgInfo) GetMsgFeature() CIMMsgFeature {
	if m != nil {
		return m.MsgFeature
	}
	return CIMMsgFeature_kCIM_MSG_FEATURE_DEFAULT
}

func (m *CIMMsgInfo) GetSessionType() CIMSessionType {
	if m != nil {
		return m.SessionType
	}
	return CIMSessionType_kCIM_SESSION_TYPE_Invalid
}

func (m *CIMMsgInfo) GetFromUserId() uint64 {
	if m != nil {
		return m.FromUserId
	}
	return 0
}

func (m *CIMMsgInfo) GetToSessionId() uint64 {
	if m != nil {
		return m.ToSessionId
	}
	return 0
}

func (m *CIMMsgInfo) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *CIMMsgInfo) GetMsgType() CIMMsgType {
	if m != nil {
		return m.MsgType
	}
	return CIMMsgType_kCIM_MSG_TYPE_UNKNOWN
}

func (m *CIMMsgInfo) GetMsgStatus() CIMMsgStatus {
	if m != nil {
		return m.MsgStatus
	}
	return CIMMsgStatus_kCIM_MSG_STATUS_NONE
}

func (m *CIMMsgInfo) GetMsgData() []byte {
	if m != nil {
		return m.MsgData
	}
	return nil
}

func (m *CIMMsgInfo) GetAttach() string {
	if m != nil {
		return m.Attach
	}
	return ""
}

func (m *CIMMsgInfo) GetSenderClientType() CIMClientType {
	if m != nil {
		return m.SenderClientType
	}
	return CIMClientType_kCIM_CLIENT_TYPE_DEFAULT
}

func init() {
	proto.RegisterEnum("CIM.Def.CIMCmdID", CIMCmdID_name, CIMCmdID_value)
	proto.RegisterEnum("CIM.Def.CIMIntenralCmdID", CIMIntenralCmdID_name, CIMIntenralCmdID_value)
	proto.RegisterEnum("CIM.Def.CIMErrorCode", CIMErrorCode_name, CIMErrorCode_value)
	proto.RegisterEnum("CIM.Def.CIMClientType", CIMClientType_name, CIMClientType_value)
	proto.RegisterEnum("CIM.Def.CIMSessionType", CIMSessionType_name, CIMSessionType_value)
	proto.RegisterEnum("CIM.Def.CIMMsgType", CIMMsgType_name, CIMMsgType_value)
	proto.RegisterEnum("CIM.Def.CIMMsgStatus", CIMMsgStatus_name, CIMMsgStatus_value)
	proto.RegisterEnum("CIM.Def.CIMSessionStatusType", CIMSessionStatusType_name, CIMSessionStatusType_value)
	proto.RegisterEnum("CIM.Def.CIMMsgFeature", CIMMsgFeature_name, CIMMsgFeature_value)
	proto.RegisterEnum("CIM.Def.CIMResCode", CIMResCode_name, CIMResCode_value)
	proto.RegisterType((*CIMUserInfo)(nil), "CIM.Def.CIMUserInfo")
	proto.RegisterType((*CIMContactSessionInfo)(nil), "CIM.Def.CIMContactSessionInfo")
	proto.RegisterType((*CIMMsgInfo)(nil), "CIM.Def.CIMMsgInfo")
}

func init() { proto.RegisterFile("CIM.Def.proto", fileDescriptor_59f2b4dd9a8c1a4e) }

var fileDescriptor_59f2b4dd9a8c1a4e = []byte{
	// 1388 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x57, 0xdd, 0x6e, 0xdb, 0x36,
	0x1b, 0x8e, 0x1d, 0xc7, 0x89, 0xe9, 0x9f, 0x8f, 0x1f, 0xdb, 0x24, 0x6e, 0xfb, 0xa5, 0x4d, 0xfd,
	0x0d, 0x6b, 0x60, 0x60, 0x39, 0xe8, 0x36, 0x0c, 0xd8, 0x99, 0x22, 0xd1, 0x2e, 0x11, 0x5b, 0xf2,
	0x24, 0xba, 0x6d, 0x76, 0x42, 0xa8, 0x16, 0x9d, 0x7a, 0x8d, 0xa4, 0x40, 0x52, 0x8a, 0xf5, 0x68,
	0xe8, 0xdf, 0xb6, 0xeb, 0xd8, 0xa5, 0xec, 0x60, 0xd8, 0x76, 0x33, 0x03, 0x76, 0x05, 0x03, 0x49,
	0x49, 0x96, 0x12, 0x17, 0xcd, 0xce, 0xc4, 0xe7, 0x79, 0xf9, 0xf0, 0xfd, 0x79, 0x28, 0xcb, 0xa0,
	0xad, 0x93, 0xf1, 0xa1, 0xc1, 0xe7, 0x87, 0xe7, 0x51, 0x98, 0x84, 0x68, 0x33, 0x5d, 0xf6, 0x3c,
	0xd0, 0xd4, 0xc9, 0x78, 0x1a, 0xf3, 0x88, 0x04, 0xf3, 0x10, 0xed, 0x82, 0xcd, 0x8b, 0x98, 0x47,
	0x6c, 0xe1, 0x75, 0x2b, 0xfb, 0x95, 0x83, 0x9a, 0x5d, 0x17, 0x4b, 0xe2, 0xa1, 0x3b, 0xa0, 0x11,
	0x2c, 0x66, 0x2f, 0x58, 0xe0, 0xfa, 0xbc, 0x5b, 0xdd, 0xaf, 0x1c, 0x34, 0xec, 0x2d, 0x01, 0x98,
	0xae, 0xcf, 0xd1, 0x3d, 0xd0, 0x74, 0x93, 0xc4, 0x9d, 0x3d, 0x67, 0x8b, 0x60, 0x1e, 0x76, 0x9b,
	0x92, 0x06, 0x0a, 0x12, 0xb2, 0xbd, 0xbf, 0x6a, 0x60, 0x5b, 0x27, 0x63, 0x3d, 0x0c, 0x12, 0x77,
	0x96, 0x38, 0x3c, 0x8e, 0x17, 0x61, 0x20, 0x0f, 0xdc, 0x03, 0x20, 0x56, 0xcb, 0xe5, 0x99, 0x8d,
	0x14, 0x21, 0x1e, 0xfa, 0x1a, 0xb4, 0x32, 0x3a, 0x79, 0x75, 0xae, 0x4e, 0xee, 0x3c, 0xdc, 0x3d,
	0xcc, 0xaa, 0xd1, 0xc9, 0x38, 0x55, 0xa3, 0xaf, 0xce, 0xb9, 0xdd, 0x8c, 0x97, 0x0b, 0x64, 0x80,
	0x4e, 0xb6, 0x37, 0x4e, 0xdc, 0xe4, 0x22, 0xee, 0xae, 0xcb, 0xdd, 0x7b, 0x2b, 0x76, 0x3b, 0x32,
	0x40, 0x6a, 0xb4, 0xe3, 0x22, 0x24, 0x12, 0xbc, 0x08, 0x22, 0xee, 0x7a, 0x6c, 0x16, 0x24, 0xdd,
	0xda, 0x7e, 0xe5, 0xa0, 0x6d, 0x37, 0x14, 0xa2, 0x07, 0x09, 0xba, 0x0f, 0x5a, 0x17, 0xe7, 0x9e,
	0x9b, 0x70, 0x8f, 0x25, 0x0b, 0x9f, 0x77, 0x37, 0x64, 0x40, 0x33, 0xc5, 0xe8, 0xc2, 0xe7, 0x68,
	0x1b, 0xd4, 0xfd, 0xf8, 0x54, 0x94, 0x57, 0x97, 0x8d, 0xd9, 0xf0, 0xe3, 0x53, 0xe2, 0xa1, 0x1e,
	0x68, 0xc7, 0x3c, 0x7a, 0xc9, 0x23, 0x96, 0xb2, 0x9b, 0xb2, 0xf8, 0xa6, 0x02, 0xc7, 0x32, 0xe6,
	0x13, 0xd0, 0x11, 0xa4, 0x50, 0x16, 0x35, 0xf8, 0xe7, 0xdd, 0x2d, 0xa9, 0xdf, 0xf2, 0xe3, 0x53,
	0xa1, 0xed, 0x08, 0x0c, 0xdd, 0x02, 0x5b, 0x22, 0xca, 0x73, 0x13, 0xb7, 0xdb, 0xd8, 0xaf, 0x1c,
	0xb4, 0xec, 0x4d, 0x3f, 0x3e, 0x35, 0xdc, 0xc4, 0x45, 0x87, 0x8a, 0x92, 0xbd, 0x03, 0xb2, 0xfa,
	0x1b, 0xc5, 0xea, 0xc7, 0xf1, 0xa9, 0xac, 0x59, 0xc4, 0xcb, 0x9e, 0x3d, 0x00, 0x50, 0xc4, 0xcf,
	0xa3, 0xd0, 0x67, 0x99, 0x11, 0x9a, 0x32, 0xaf, 0xb6, 0x1f, 0x9f, 0x0e, 0xa2, 0xd0, 0x9f, 0x2a,
	0x3f, 0x7c, 0x01, 0x80, 0x08, 0x4c, 0x1b, 0xdb, 0x92, 0xd2, 0xdb, 0x97, 0xa4, 0x55, 0x07, 0xed,
	0x86, 0x9f, 0x3d, 0x8a, 0x66, 0x8a, 0x5d, 0xca, 0x19, 0xdd, 0xb6, 0x6c, 0x87, 0xa0, 0x35, 0x09,
	0x08, 0x1f, 0xf1, 0xef, 0x13, 0x1e, 0x78, 0xaa, 0x96, 0x8e, 0xf2, 0x91, 0x82, 0x64, 0x39, 0x07,
	0x00, 0x2e, 0x62, 0x16, 0x85, 0xcf, 0xc2, 0x84, 0xa5, 0x63, 0xea, 0xfe, 0x67, 0xbf, 0x72, 0xb0,
	0x65, 0x77, 0x16, 0xb1, 0x2d, 0xe0, 0x74, 0x9e, 0xbd, 0xdf, 0x6a, 0x00, 0xa8, 0x2c, 0xa4, 0xcd,
	0x7a, 0xa0, 0x3d, 0x3b, 0x5b, 0xf0, 0x20, 0xc9, 0x9a, 0x5d, 0x91, 0xda, 0x4d, 0x05, 0x8e, 0x57,
	0x0f, 0xa4, 0x7a, 0x75, 0x20, 0x5f, 0x02, 0xd1, 0x7a, 0x16, 0xf1, 0x98, 0xcd, 0x42, 0x8f, 0xa7,
	0x8e, 0x2a, 0xf5, 0xd4, 0xe6, 0xb1, 0x1e, 0x7a, 0xdc, 0x16, 0x95, 0xa6, 0xcf, 0xe8, 0x2b, 0xd0,
	0x94, 0x6d, 0xe5, 0x6e, 0x72, 0x11, 0x71, 0xe9, 0xa2, 0xce, 0xc3, 0x9d, 0x4b, 0xed, 0x1a, 0x28,
	0x56, 0x6e, 0x4c, 0x9f, 0xaf, 0xf8, 0x7f, 0xe3, 0x5f, 0xf8, 0x7f, 0x1f, 0xb4, 0x4a, 0x73, 0xac,
	0xcb, 0x72, 0xc0, 0x7c, 0x39, 0xc4, 0x1e, 0x68, 0x27, 0x21, 0x2b, 0xdc, 0xbf, 0xd4, 0x82, 0x49,
	0xe8, 0xe4, 0x37, 0xf0, 0x1e, 0x68, 0xce, 0x22, 0xee, 0x26, 0x5c, 0xf9, 0x5b, 0xf9, 0x0f, 0x28,
	0x48, 0xda, 0xbb, 0x68, 0xb1, 0xc6, 0x35, 0x2c, 0x56, 0x76, 0x0e, 0xb8, 0xa6, 0x73, 0x8a, 0x1e,
	0x6f, 0x96, 0x3d, 0xbe, 0x03, 0xea, 0xa9, 0xa1, 0x5a, 0x72, 0xa8, 0xe9, 0x0a, 0x19, 0x00, 0xc5,
	0x3c, 0xf0, 0x78, 0xc4, 0xd2, 0xd1, 0xcb, 0x14, 0xdb, 0x57, 0x7b, 0xaf, 0x4b, 0x5a, 0x66, 0x09,
	0xd5, 0x8e, 0x25, 0xd2, 0xff, 0xbb, 0x06, 0xb6, 0x44, 0x8c, 0xef, 0x11, 0x03, 0xdd, 0x04, 0xf0,
	0x85, 0x4e, 0xc6, 0x4c, 0x27, 0x06, 0x9b, 0x9a, 0xc7, 0xa6, 0xf5, 0xc4, 0x84, 0x6b, 0xa8, 0x07,
	0xf6, 0x72, 0x74, 0x64, 0x0d, 0x89, 0xc9, 0xb4, 0x29, 0x7d, 0xc4, 0xa8, 0x75, 0x8c, 0x4d, 0x66,
	0xe3, 0x6f, 0xe0, 0xeb, 0xea, 0x47, 0x62, 0x9c, 0x09, 0x7c, 0x53, 0x45, 0xff, 0x07, 0x77, 0x57,
	0xc5, 0x8c, 0xac, 0xa1, 0x35, 0xa5, 0x52, 0xe8, 0xed, 0x47, 0x83, 0x9c, 0x09, 0x7c, 0x57, 0x45,
	0x7b, 0xa0, 0x7b, 0x29, 0xe8, 0x11, 0xd6, 0x6c, 0x7a, 0x84, 0x35, 0x0a, 0xdf, 0x57, 0xd1, 0x67,
	0xe0, 0x60, 0x49, 0x13, 0x47, 0x68, 0xeb, 0xd8, 0xa4, 0x4c, 0xb7, 0x4c, 0xaa, 0xe9, 0x94, 0x39,
	0xd8, 0x71, 0x88, 0x95, 0xe6, 0x5e, 0xbb, 0x7e, 0xb8, 0x28, 0xa3, 0x86, 0x6e, 0x83, 0xed, 0x72,
	0xf8, 0xd8, 0x19, 0x4a, 0xa9, 0xf7, 0x1f, 0xe2, 0x9c, 0x09, 0xfc, 0xb1, 0x86, 0x76, 0xc0, 0x7f,
	0x73, 0x4e, 0xc0, 0x86, 0x46, 0x35, 0xf8, 0xba, 0x5e, 0xda, 0x93, 0xe1, 0x4c, 0xd3, 0x8f, 0xe1,
	0x9b, 0xab, 0x9c, 0x8d, 0x35, 0x43, 0x72, 0x6f, 0xeb, 0xa5, 0x26, 0xe4, 0x9c, 0x69, 0x51, 0x32,
	0x38, 0x81, 0xef, 0xea, 0xe8, 0x01, 0xe8, 0x95, 0xe8, 0x21, 0xa6, 0x6c, 0xa4, 0x51, 0x9c, 0x26,
	0x45, 0x0c, 0x95, 0xf3, 0xb5, 0x02, 0x45, 0x01, 0xf5, 0xd2, 0x68, 0xb2, 0xc0, 0xa3, 0x93, 0xa2,
	0xda, 0x4f, 0x1f, 0x0d, 0x72, 0x26, 0xf0, 0xe7, 0x7a, 0x7f, 0x0e, 0xa0, 0x4e, 0xc6, 0x24, 0x48,
	0x78, 0x10, 0xb9, 0x67, 0x65, 0xef, 0x39, 0x25, 0xef, 0x65, 0x45, 0x0a, 0xd4, 0x38, 0x62, 0x8f,
	0xb5, 0x11, 0x31, 0x34, 0x8a, 0xd5, 0xe8, 0x3a, 0x1f, 0xa6, 0xc5, 0xa8, 0x3a, 0xfd, 0x37, 0x55,
	0xd0, 0xd2, 0xc9, 0x18, 0x47, 0x51, 0x18, 0xc9, 0x17, 0x55, 0x76, 0x08, 0xb6, 0x6d, 0xe6, 0x4c,
	0x75, 0xdd, 0x71, 0x30, 0x5c, 0x43, 0x77, 0xc0, 0x6e, 0x8e, 0x12, 0x93, 0x62, 0xdb, 0xd4, 0x46,
	0x62, 0x61, 0xd9, 0xb0, 0x82, 0x3e, 0x05, 0xf7, 0x73, 0x52, 0x79, 0xad, 0x78, 0xd0, 0x40, 0x23,
	0x23, 0x6c, 0xc0, 0xdf, 0x2b, 0x79, 0xe1, 0xcb, 0xb8, 0xc7, 0xd8, 0x96, 0xbe, 0xa1, 0x96, 0xc5,
	0xac, 0x91, 0x01, 0xff, 0x58, 0x25, 0x46, 0x4c, 0xa9, 0xc5, 0xa6, 0x0e, 0xb6, 0xd5, 0x75, 0x81,
	0x7f, 0x56, 0xf2, 0xeb, 0x24, 0x93, 0x50, 0x9c, 0x36, 0x12, 0x03, 0x3e, 0x61, 0xf8, 0x29, 0x71,
	0x28, 0x7c, 0xb7, 0x59, 0xd4, 0xca, 0x62, 0x32, 0xb1, 0x89, 0x66, 0x6b, 0x63, 0x4c, 0xb1, 0x0d,
	0xdf, 0x6f, 0xf6, 0x7f, 0x90, 0x1f, 0x47, 0xcb, 0x2b, 0x8f, 0xfe, 0x97, 0x19, 0x67, 0x44, 0x84,
	0xcd, 0xe9, 0xc9, 0x04, 0x33, 0x03, 0x0f, 0xb4, 0xe9, 0x88, 0xc2, 0xb5, 0x95, 0xac, 0x66, 0x1a,
	0xb6, 0x45, 0x0c, 0x58, 0x41, 0x5d, 0x70, 0xf3, 0x0a, 0x4b, 0x2c, 0x07, 0x56, 0x57, 0x32, 0x4f,
	0xf0, 0x11, 0x5c, 0xef, 0x7f, 0x07, 0x3a, 0xe5, 0xf7, 0x38, 0xda, 0x03, 0xb7, 0xd4, 0xd8, 0xd2,
	0x9b, 0xa5, 0x64, 0x82, 0x97, 0xee, 0xd9, 0xc2, 0x2b, 0xa4, 0x50, 0xa2, 0x1d, 0x62, 0x0e, 0x47,
	0x18, 0x56, 0xf2, 0x69, 0x95, 0xd8, 0xa1, 0x6d, 0x4d, 0x27, 0xb0, 0xda, 0xff, 0xa5, 0x92, 0xfd,
	0x2e, 0xca, 0x83, 0x6e, 0xa5, 0xf7, 0x47, 0xd8, 0x4f, 0xc6, 0x2d, 0x9d, 0xb5, 0x03, 0x50, 0x99,
	0xa2, 0xf8, 0x29, 0x85, 0x15, 0xb4, 0x0b, 0x6e, 0x94, 0x71, 0x32, 0xd6, 0x86, 0x18, 0x56, 0xaf,
	0x12, 0xda, 0xd4, 0x20, 0x16, 0x5c, 0x5f, 0xa1, 0x44, 0x26, 0x0e, 0xdc, 0xba, 0xba, 0xc1, 0xb6,
	0x8e, 0x2c, 0x0a, 0x1b, 0xfd, 0x5f, 0x95, 0x2d, 0xf3, 0x1f, 0x82, 0xbc, 0x77, 0x22, 0xd2, 0xa1,
	0x1a, 0x9d, 0x3a, 0xcc, 0xb4, 0x4c, 0x61, 0xcd, 0xdb, 0x60, 0xe7, 0x32, 0x33, 0x35, 0x85, 0x11,
	0x0a, 0xb3, 0x28, 0x70, 0x92, 0xa9, 0xe6, 0x2d, 0x2a, 0x30, 0x06, 0x1e, 0x61, 0x8a, 0x0d, 0xb8,
	0xbe, 0x8a, 0x74, 0xb0, 0x69, 0x10, 0x73, 0x08, 0x6b, 0xab, 0x34, 0x1d, 0x6c, 0x52, 0xb8, 0xb1,
	0x6a, 0x9b, 0x78, 0x4f, 0x92, 0x09, 0x85, 0xf5, 0x52, 0x9f, 0xb3, 0x03, 0x6d, 0x6d, 0x40, 0xe1,
	0x66, 0x3e, 0xeb, 0xa2, 0x22, 0x0f, 0x3c, 0xdd, 0x9d, 0xf1, 0x33, 0xb8, 0xb5, 0x5a, 0x76, 0x30,
	0x75, 0xb0, 0x01, 0x1b, 0xab, 0xaa, 0x4f, 0x2f, 0x1c, 0xe8, 0xdb, 0xe0, 0xe6, 0xaa, 0xef, 0xdb,
	0x7c, 0x4f, 0x66, 0x8f, 0x74, 0x9f, 0x75, 0x0c, 0xd7, 0xd0, 0x5d, 0x70, 0x7b, 0x15, 0xa7, 0x7a,
	0x03, 0x2b, 0xfd, 0x91, 0xbc, 0x2a, 0xcb, 0x6f, 0x95, 0xdc, 0x89, 0x22, 0x81, 0x01, 0xd6, 0xe8,
	0xd4, 0x2e, 0x5e, 0x95, 0x62, 0x69, 0x19, 0x6b, 0x5b, 0x9a, 0x04, 0x60, 0xb5, 0xdf, 0x93, 0x56,
	0xcc, 0xbe, 0x91, 0xb2, 0x57, 0x8f, 0x8d, 0x1d, 0xa6, 0x5b, 0x06, 0x96, 0x19, 0x1d, 0xed, 0x83,
	0xdd, 0x59, 0xe8, 0x1f, 0xce, 0xc2, 0xf9, 0x9c, 0xf3, 0xd9, 0x73, 0x37, 0x51, 0x7f, 0x60, 0x9e,
	0x5d, 0xcc, 0x1f, 0xad, 0x7f, 0xbb, 0x3e, 0x5b, 0xf8, 0xcf, 0xea, 0x12, 0xf8, 0xfc, 0x9f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x67, 0x76, 0xff, 0x13, 0xe2, 0x0c, 0x00, 0x00,
}
